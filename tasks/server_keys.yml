- name: Create openvpn key directory
  file:
    path: "{{openvpn_key_dir}}"
    state: directory

- name: Copy openssl server/ca extensions
  copy:
    src: "{{item}}"
    dest: "{{openvpn_key_dir}}"
    owner: root
    group: root
    mode: 0400
  with_items:
    - openssl-server.ext
    - openssl-ca.ext

- name: Copy CA key
  copy:
    content: "{{openvpn_ca_key.key}}"
    dest: "{{openvpn_key_dir}}/ca-key.pem"
    mode: 0400
  when: openvpn_ca_key is defined

- name: Copy CA cert
  copy:
    content: "{{openvpn_ca_key.crt}}"
    dest: "{{openvpn_key_dir}}/ca.crt"
    mode: 0444
  when: openvpn_ca_key is defined

- name: Generate CA key
  command: openssl req -nodes -newkey rsa:{{openvpn_rsa_bits}} -keyout ca-key.pem -out ca-csr.pem -days {{ openvpn_openssl_days }} -{{ openvpn_openssl_digest }} -subj /CN=OpenVPN-CA-{{ openvpn_server_hostname[:53] }}/
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: ca-key.pem
  when: openvpn_ca_key is not defined

- name: Protect CA key
  file:
    path: "{{openvpn_key_dir}}/ca-key.pem"
    mode: 0400
  when: openvpn_ca_key is not defined

- name: Sign CA key
  command: openssl x509 -req -in ca-csr.pem -out ca.crt -CAcreateserial -signkey ca-key.pem -{{ openvpn_openssl_digest }} -days {{ openvpn_openssl_days }} -extfile openssl-ca.ext
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: ca.crt
  when: openvpn_ca_key is not defined

- name: Generate server key
  command: openssl req -nodes -newkey rsa:{{openvpn_rsa_bits}} -keyout server.key -out server.csr -days {{ openvpn_openssl_days }} -{{ openvpn_openssl_digest }} -subj /CN=OpenVPN-Server-{{ openvpn_server_hostname[:49] }}/
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: server.key

- name: Protect server key
  file:
    path: "{{openvpn_key_dir}}/server.key"
    owner: root
    group: root
    mode: 0400

- name: Sign server key
  command: openssl x509 -req -in server.csr -out server.crt -CA ca.crt -CAkey ca-key.pem -{{ openvpn_openssl_digest }} -days {{ openvpn_openssl_days }} -CAcreateserial -extfile openssl-server.ext
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: server.crt

- name: Copy tls-auth key
  copy:
    content: "{{openvpn_tls_auth_key}}"
    dest: "{{openvpn_key_dir}}/ta.key"
    mode: 0400
  when: openvpn_tls_auth_key is defined

- name: Generate tls-auth key
  command: openvpn --genkey --secret ta.key
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: ta.key
  when: openvpn_tls_auth_key is not defined

- name: Generate dh params
  command: openssl dhparam -out {{openvpn_key_dir}}/dh.pem {{openvpn_rsa_bits}}
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: dh.pem

- name: Install ca.conf config file
  template:
    src: ca.conf.j2
    dest: "{{ openvpn_key_dir }}/ca.conf"
    owner: root
    group: root
    mode: 0644

- name: Create initial certificate revocation list squence number
  shell: "echo 00 > crl_number"
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: crl_number

- name: Generate tls-auth key
  command: openvpn --genkey --secret ta.key
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: ta.key
  when: openvpn_tls_auth_key is not defined

- name: Install revocation script
  template:
    src: revoke.sh.j2
    dest: "{{openvpn_key_dir}}/revoke.sh"
    owner: root
    group: root
    mode: 0744

- name: Ensure certificate revocation list database exists
  copy:
    dest: "{{openvpn_key_dir}}/index.txt"
    content: ""
    force: no

- name: Set up certificate revocation list
  command: sh revoke.sh
  args:
    chdir: "{{ openvpn_key_dir }}"
    creates: "{{ openvpn_key_dir }}/ca-crl.pem"
